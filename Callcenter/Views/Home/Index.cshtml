@model System.Collections.Generic.List<Callcenter.Models.Entry>
@{
    ViewData["Title"] = "Übersicht";
}
<style>
    .marked {
        background-color: rosybrown;
    }

    .other {
        background-color: aqua;
    }
</style>
<script type="text/javascript">
    function MarkItem(elmid) {
        const element = document.getElementById(elmid);
        if (element.classList.contains("other")) {
            const isConfirmed = confirm("Dieser Eintrag wird bereits bearbeitet. Bitte bestätigen Sie, dass sie diesen Eintrag übernehmen möchten.");
            if (!isConfirmed) {
                return;
            }
            if (element.classList.contains("other")) {
                element.classList.remove("other");
            }
        }
        if (!element.classList.contains("marked")) {
            element.classList.add("marked");
            element.childNodes.forEach(item => {
                item.childNodes.forEach(itm => {
                    if (itm.classList != undefined && itm.classList.contains("fa-user-edit")) {
                        itm.classList.add("fa-times");
                        itm.classList.remove("fa-user-edit");
                    }
                });
            });
            var xhttp = new XMLHttpRequest();
            xhttp.open("GET", "/Entry/Mark/" + elmid, true);
            xhttp.send();
        } else {
            element.classList.remove("marked");
            element.childNodes.forEach(item => {
                item.childNodes.forEach(itm => {
                    if (itm.classList != undefined && itm.classList.contains("fa-times")) {
                        itm.classList.add("fa-user-edit");
                        itm.classList.remove("fa-times");
                    }
                });
            });
            var xhttp = new XMLHttpRequest();
            xhttp.open("GET", "/Entry/Free/" + elmid, true);
            xhttp.send();
        }
    }
    function DelItem(elmid) {
        var element = document.getElementById(elmid);
        if (element.classList.contains("marked")) {
            window.location.href = "/Entry/Delete/" + elmid;
        } else {
            alert("Element " + elmid + " nicht als bearbeitet Markiert");
        }
    }
</script>
<div class="d-md-flex h-md-100 align-items-center">

    <!-- First Half -->

    <div class="col-md-6 p-0 bg-indigo h-md-100">
        <div class="text-white d-md-flex align-items-center h-100 p-5 text-center justify-content-center">
            <div class="logoarea pt-5 pb-5">
                <div class="text-center">
                    <h1 class="display-4">Callcenter gemeinsam.online</h1>
                </div>
                <div id="tablespace">
                    <table style="width: 100% ">
                        <tr>
                            <th>Zeitpunkt</th>
                            <th>Telefonnummer</th>
                            <th>Text</th>
                            <th>Bearbeiten</th>
                            <th>Fertig</th>
                        </tr>
                        @foreach (var item in Model)
                        {
                            <tr id="@item.id" class="@item.CString">
                                <td>@item.timestamp</td>
                                <td>@item.phone</td>
                                <td>@item.request</td>
                                <td onclick="MarkItem('@item.id')"><i class="fas fa-user-edit" title="In Bearbeitung nehmen"></i></td>
                                <td onclick="DelItem('@item.id')"><i class="fas fa-thumbs-up" title="Fertigstellen"></i></td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Second Half -->

    <div class="col-md-6 p-0 bg-white h-md-100 loginarea">
        <div class="d-md-flex align-items-center h-md-100 p-5 justify-content-center">
            Second half content here
        </div>
    </div>

</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script type="text/javascript">
    "use strict";
    var connection = new signalR.HubConnectionBuilder().withUrl("/Hub").build();
    connection.start().then(function () {
        console.log("SignalR Connected");
    }).catch(function (err) {
        return console.error(err.toString());
    });
    connection.on("marked", function (id) {
        console.log("SignalR - Marked: " + id);
        var element = document.getElementById(id);
        if (element && element != undefined && element != null && !element.classList.contains("marked")) {
            element.classList.add("other");
        }
    });
    connection.on("free", function (id) {
        console.log("SignalR - Free: " + id);
        var element = document.getElementById(id);
        if (element && element != undefined && element != null && !element.classList.contains("marked")) {
            element.classList.remove("other");
        }
    });
    connection.on("delete", function (id) {
        console.log("SignalR - Delete: " + id);
        var element = document.getElementById(id);
        if (element && element != undefined && element != null) {
            element.parentElement.removeChild(element);
        }
    });
</script>
